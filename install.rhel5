#!/bin/bash

# Modified for use with RHEL5 based systems

# Allow VCAP_REPO to be overriden for testing - 
# need to use http; git on RHEL systems finds the CA for github invalid and bombs out.
VCAP_REPO=${VCAP_REPO:-http://github.com/cloudfoundry/vcap.git}

export rvm_trust_rvmrcs_flag=1 # Trust all rmvrcs we find

RHEL=`uname -r | pcregrep -ce'el5$'`
ARCH=`uname -m`
if [[ $RHEL != 1 ]]; then
    echo "Not RHEL (or CentOS) 5, cancelling set-up"
    exit 1
fi
PLATFORM="RHEL/CentOS 5"


echo ""
echo '-----------------------------------------------------------'
echo "($PLATFORM) One Click RHEL Installer for VMware's Cloud Application Platform!"
echo '-----------------------------------------------------------'
echo ""

echo "Hopefully this will be the last time you type your password"
sudo ls > /dev/null
echo ""

read -p "Enter the password you want to use for root mysql user: " MYSQL_PASS
#MYSQL

read -p "Enter the password you want to use for root postgresql user: " POSTGRESQL_PASS
#POSTGRES


echo "enabling EPEL"
sudo su -c 'rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm'

echo "Installing dependencies"
# blind updates are bad, but this could be done later
# sudo apt-get update
sudo yum -qy install coreutils.$ARCH autoconf curl.$ARCH git.$ARCH bison.$ARCH zlib-devel.$ARCH openssl-devel.$ARCH readline-devel.$ARCH gcc gcc-c++

sudo yum -qy remove ruby
RUBY_VERSION=1.8.7-2011.03
echo "Installing ruby enterprise edition to /opt (repo version too low)"
curl http://rubyenterpriseedition.googlecode.com/files/ruby-enterprise-$RUBY_VERSION.tar.gz > ree.tar.gz
tar -xzf ree.tar.gz
sudo ./ruby-enterprise-$RUBY_VERSION/installer -a /opt/ruby-enterprise-$RUBY_VERSION
export PATH=$PATH:/opt/ruby-enterprise-$RUBY_VERSION:/opt/ruby-enterprise-$RUBY_VERSION/bin

echo "Linking REE binaries to /bin"
sudo ln -s /opt/ruby-enterprise-$RUBY_VERSION/bin/ruby /usr/bin/ruby
sudo ln -s /opt/ruby-enterprise-$RUBY_VERSION/bin/gem /usr/bin/gem

echo "patching your .bashrc"
echo "# The following line is added by VCAP installer" >> ~/.bashrc
echo 'export PATH=$PATH:/opt/ruby-enterprise-1.8.7-2011.03:/opt/ruby-enterprise-1.8.7-2011.03/binr' >> ~/.bashrc

# Overide user-supplied mysql & postgresql passwords with random ones
# if we know how to do it on this platform
MYSQL_PASS="$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c10)"
POSTGRESQL_PASS="$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c10)"

echo "Patch around .bash_profile issue with RMV"
if [ -f ~/.bashrc ]; then
  if [ ! -f ~/.bash_profile ]; then
    # rvm install is going to write into .bash_profile in this
    # case and short circuit loading of .bashrc so we need to
    # create a proper .bash_profile if its missing
    echo "# This file is sourced by bash for login shells.  The following line" >> ~/.bash_profile
    echo "# runs your .bashrc and is recommended by the bash info pages." >> ~/.bash_profile
    echo "[[ -f ~/.bashrc ]] && . ~/.bashrc" >> ~/.bash_profile
  fi
fi

echo "Installing rvm"
curl -s -k -B https://rvm.beginrescueend.com/install/rvm > /tmp/install_rvm
bash /tmp/install_rvm
rm /tmp/install_rvm

echo "Fixing init scripts to work with rvm"
init_file=""
if [ -f ~/.bashrc ]; then
  init_file="$HOME/.bashrc"
elif [ -f ~/.bash_profile ]; then
  init_file="$HOME/.bash_profile"
elif [ -f ~/.zshrc ]; then
  init_file="$HOME/.zshrc"
fi
if [ -f "$init_file" ]; then
  if grep '^ *\[ -z "$PS1" \] && return *$' $init_file; then
    sed -i.bkup -e 's/^ *\[ -z "$PS1" \] && return *$/if [ -n "$PS1" ]; then/' $init_file
    echo "fi" >> $init_file
  fi

  echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"' >> $init_file
fi

echo "Activate rvm"
rvm_path="$HOME/.rvm"
[[ -s "$rvm_path/scripts/rvm" ]] && source "$rvm_path/scripts/rvm"
type rvm | head -1

# remove rake from default and global gems and instead install manually
rm ~/.rvm/gemsets/default.gems
rm ~/.rvm/gemsets/global.gems

echo "Installing various rubies"
rvm install 1.9.2-p180
rvm --default 1.9.2-p180
rvm install 1.8.7

# install only rake 0.8.7
rvm use 1.8.7
gem install rake --version '0.8.7' --no-rdoc --no-ri

rvm use 1.9.2
gem install rake --version '0.8.7' --no-rdoc --no-ri

echo "Getting vcap"
[ -d ~/cloudfoundry ] || mkdir ~/cloudfoundry
cd ~/cloudfoundry

[ -d vcap ] || git clone $VCAP_REPO
cd vcap

echo "fixing .gitmodules for RHEL"
curl https://raw.github.com/sjsadowski/cloudfoundry-setup-RHEL/master/gitmodule > .gitmodules

git submodule update --init
gem install vmc --no-rdoc --no-ri

echo "Setting up vcap."
cd ~/cloudfoundry/vcap

echo "replacing setup files with RHEL/CentOS equivalents"
curl https://raw.github.com/sjsadowski/cloudfoundry-setup-RHEL/master/setup/install > setup/install
curl https://raw.github.com/sjsadowski/cloudfoundry-setup-RHEL/master/setup/vcap_setup > setup/vcap_setup

sudo setup/vcap_setup -a -s -p "$MYSQL_PASS" -q "$POSTGRESQL_PASS"

cd ~/cloudfoundry/vcap/services/mysql/config
sed -i.bkup -e "s/pass: root/pass: $MYSQL_PASS/" mysql_node.yml

if [ -d ~/cloudfoundry/vcap/services/postgresql ]; then
    cd ~/cloudfoundry/vcap/services/postgresql/config
    sed -i.bkup -e "s/9.0/8.4/g" postgresql_gateway.yml
    sed -i.bkup -e "s/user: vcap/user: postgres/" -e "s/pass: vcap/pass: $POSTGRESQL_PASS/" postgresql_node.yml
fi

echo "Restarting nginx"
cd ~/cloudfoundry/vcap
curl https://raw.github.com/sjsadowski/cloudfoundry-setup-RHEL/master/nginx/nginx.conf.rhel5 > nginx.conf.rhel5
sudo mv nginx.conf.rhel5 /etc/nginx/nginx.conf
sudo /sbin/service nginx restart

echo "Installing bundler"
cd ~/cloudfoundry/vcap
gem install bundler --no-rdoc --no-ri
rake bundler:install

# don't start up vcap in this shell
# its best to exit the shell and then
# come back in so that the .rvmrc in cloudfoundry/vcap activates correctly

echo 'Success!'
